package org.usfirst.frc.team2523.robot.commands;

import org.usfirst.frc.team2523.robot.Robot;

import edu.wpi.first.wpilibj.command.Command;

/**Simple Drive Macro That takes a number of feet as a parameter.
 * Info: 1 rotation of a 6 inch diameter wheel covers 1.57083333333 feet
 * Info: 2607.5331564987 encoder pulses per foot. Gonna have to round up to 2608 per foot,
 * unless a decimal solution becomes apparent.
 *
 * Info: Pulses Per Angle of Rotation: 60.69
 *
 */
public class TurnForAngle extends Command {
	private double PulsesPerDegree = 60.69;
	private int PulsesAtCMDStart;
	private int pulsesThisCheck;
	private int TotalPulses;
	private double traveledDG;
	private int numResets = 0;
	private double targetANG;
	private double maxSPD;
	private double totalPulsesPrevCheck;
	private int direction = 0; //-1 is left, 1 is right   
	
    public TurnForAngle(double targetangle, double rotspeed) {
        // Use requires() here to declare subsystem dependencies
        requires(Robot.driveTrain);
        this.targetANG = targetangle;
        this.maxSPD = rotspeed;
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	PulsesAtCMDStart = (int) Robot.driveTrain.getTrainValue();
    	totalPulsesPrevCheck = PulsesAtCMDStart;
    	if(targetANG<0){//Turn Direction
    		Robot.driveTrain.driveSet(-maxSPD, maxSPD);
    		direction = -1;
    	}
    	if(targetANG<0){
    		Robot.driveTrain.driveSet(maxSPD, -maxSPD);
    		direction = 1;
        }
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	if(direction == 1){
    		
    		
    	} else if (direction == -1){
    		
    		
    	}
    	
    	pulsesThisCheck = (int) (Robot.driveTrain.getTrainValue()-totalPulsesPrevCheck);
    	if(pulsesThisCheck<0){ //Rollover When The Encoder Does
    		numResets++;
    		TotalPulses = (int) (TotalPulses + Robot.driveTrain.getTrainValue()) +(numResets * 4096);
    	} else {
    		TotalPulses = TotalPulses + pulsesThisCheck + (numResets * 4096);
    	}
    	traveledDG = TotalPulses/PulsesPerDegree;
    	totalPulsesPrevCheck=TotalPulses;
    	//Call isfinished here if it's not configured to do so automatically.
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
    	if()
    	if(traveledfeet >= targetft){
    		return true;
    	}else{
        return false;
    	}
    }

    // Called once after isFinished returns true
    protected void end() {
    	Robot.driveTrain.driveSet(0);
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	Robot.driveTrain.driveSet(0);
    }
}
