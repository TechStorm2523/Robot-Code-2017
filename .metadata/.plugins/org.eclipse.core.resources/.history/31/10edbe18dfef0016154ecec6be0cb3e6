package org.usfirst.frc.team2523.robot.subsystems;

import org.usfirst.frc.team2523.robot.OI;
import org.usfirst.frc.team2523.robot.RobotMap;
import org.usfirst.frc.team2523.robot.Robot;




import com.ctre.CANTalon;

import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.command.PIDSubsystem;

/**
 *
 */
public class DrivePID extends PIDSubsystem {
	CANTalon motorL1 = new CANTalon(RobotMap.leftMotor1);
	CANTalon motorL2 = new CANTalon(RobotMap.leftMotor2);
	CANTalon motorR1 = new CANTalon(RobotMap.rightMotor1);
	CANTalon motorR2 = new CANTalon(RobotMap.rightMotor2);
	RobotDrive driveControl = new RobotDrive(motorL1,motorR1,motorL2,motorR2);
    // Initialize your subsystem here
    public DrivePID() {
    	super("DrivePID", 0,0,0 );
        // Use these to get going:
        // setSetpoint() -  Sets where the PID controller should move the system
        //                  to
       // enable() - Enables the PID controller.
    	
    }

    public void initDefaultCommand() {
		// Set the default command for a subsystem here.
		//setDefaultCommand();
	}

    protected double returnPIDInput() {
        // Return your input value for the PID loop
        // e.g. a sensor, like a potentiometer:
        // yourPot.getAverageVoltage() / kYourMaxVoltage;
        return 0.0;
    }

    protected void usePIDOutput(double output) {
        // Use output to drive your system, like a motor
        // e.g. yourMotor.set(output);
    }
    public void joyDrive(){
		driveControl.arcadeDrive(OI.controlStick.getY(),OI.controlStick.getTwist());
		
	}
	public void revJoyDrive(){
		driveControl.arcadeDrive(-OI.controlStick.getY(),-OI.controlStick.getTwist());
		
	}
	public void driveSet(double num){
		driveSet(num, num);
	}
	public void driveSet(double leftnum, double rightnum){
		motorL1.set(leftnum);
		motorL1.set(leftnum);
		motorL1.set(rightnum);
		motorL1.set(rightnum);
	}
	public void turnLeft(double num){
		driveSet(-num, num);
		
	}
	public void turnRight(double num){
		driveSet(num, -num);
		
	}
}
